name: Build and test

on:
  push:
    branches: main

  pull_request:

  workflow_dispatch: # allows manual trigger

env:
  RUST_FMT_VERSION: nightly-2023-04-01-x86_64-unknown-linux-gnu

jobs:

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run cargo fmt
        run: |
          rustup +${{ env.RUST_FMT_VERSION }} component add rustfmt
          cargo +${{ env.RUST_FMT_VERSION }} fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Clippy
        run: |
          rustup component add clippy
      - name: Run Clippy
        run: |
          cargo clippy --locked --all-targets --all-features --no-deps -- -D warnings

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup dependencies
        run: |
          cd notification-server
          make setup-db && make
      - name: Run tests
        run: |
          cargo test --locked --all-features --release

  # Smart contracts currently has to be standalone crates and not part of the repo workspace
  # due to how cargo-concordium verifiable build works
  smart_contracts:
    name: Build and test ${{ matrix.crate }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crates: ["wallet-connect-test-bench/smart-contract"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install rustfmt and Clippy
        run: |
          rustup +${{ env.RUST_FMT_VERSION }} component add rustfmt          
          rustup component add clippy
      - name: Run cargo fmt
        run: |
          cargo --manifest-path=${{ matrix.crate }}/Cargo.toml +${{ env.RUST_FMT_VERSION }} fmt --check
      - name: Run Clippy
        run: |
          cargo --manifest-path=${{ matrix.crate }}/Cargo.toml clippy --locked --all-targets --all-features --no-deps -- -D warnings
      - name: Run tests
        run: |
          cargo --manifest-path=${{ matrix.crate }}/Cargo.toml test --locked --all-features --release

